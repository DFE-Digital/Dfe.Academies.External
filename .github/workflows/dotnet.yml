name: .NET

on:
  push:
    branches: [ master ]
    paths:
    - 'Dfe.Academies.*/**'
    - '!Dfe.Academies.External.Web.CypressTests/**'
    - '**/*.csproj'
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize, reopened ]
    paths:
    - 'Dfe.Academies.*/**'
    - '!Dfe.Academies.External.Web.CypressTests/**'
    - '**/*.csproj'

env:
  JAVA_VERSION: '17'
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Shallow clones disabled for a better relevancy of SC analysis
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'microsoft'
    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Install SonarCloud scanners
      run: dotnet tool install --global dotnet-sonarscanner
    - name: Install dotnet reportgenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool
    - name: Add nuget package source
      run: dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/DFE-Digital/index.json"      
    - name: Restore dependencies
      run: dotnet restore
    - name: Build, Test and Analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet-sonarscanner begin /k:"DFE-Digital_Dfe.Academies.External" /o:"dfe-digital" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.coverageReportPaths=CoverageReport/SonarQube.xml
        dotnet build --no-restore
        dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage"
        reportgenerator -reports:./**/coverage.cobertura.xml -targetdir:./CoverageReport -reporttypes:SonarQube
        dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"  
