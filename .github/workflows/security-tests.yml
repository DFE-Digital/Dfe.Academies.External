name: Weekly OWASP ZAP Baseline Scan

on:
  schedule:
    - cron: '0 0 * * 0' # Runs every Sunday at 00:00 UTC
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to scan'
        required: true
        default: 'development'
        type: string

jobs:
  zap_scan:
    if: github.event_name == 'workflow_dispatch' && inputs.environment != 'production' || github.event_name == 'schedule'
    runs-on: ubuntu-24.04
    name: OWASP ZAP Baseline Scan
    environment: ${{ github.event_name == 'schedule' && 'development' || inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install Dependencies
        run: npm ci
        working-directory: ./Dfe.Academies.External.Web/CypressTests

      - name: Install Cypress
        run: npx cypress install
        working-directory: ./Dfe.Academies.External.Web/CypressTests

      - name: Run Cypress Login and Extract Session
        id: cypress_login
        run: |
          npx cypress run --spec 'cypress/e2e/login.cy.ts' --headless
          COOKIE_JSON=$(cat ./cypress/fixtures/session_cookies.json)
          ASP_NET_CORE_COOKIE=$(echo "$COOKIE_JSON" | jq -r '.cookies' | grep -oE '\.AspNetCore\.Cookies=[^;]+')
          echo "ZAP_COOKIES=$ASP_NET_CORE_COOKIE" >> $GITHUB_OUTPUT
        env:
          CYPRESS_URL: ${{ secrets.URL }}
          CYPRESS_LOGIN_USERNAME: ${{ secrets.LOGIN_USERNAME }}
          CYPRESS_LOGIN_PASSWORD: ${{ secrets.LOGIN_PASSWORD }}
          CYPRESS_SIGNIN_URL: ${{ secrets.SIGNIN_URL }}
          CYPRESS_CI: true # Ensure Cypress knows it's in a CI environment
        working-directory: ./Dfe.Academies.External.Web/CypressTests

      - name: Create ZAP Configuration File
        run: |
          echo "::add-mask::${{ steps.cypress_login.outputs.ZAP_COOKIES }}"
          ZAP_COOKIES="${{ steps.cypress_login.outputs.ZAP_COOKIES }}"
          echo "auth.loginRequest.authType	=	cookieBasedAuthentication" >> zap_config.ini
          echo "auth.loginRequest.cookieString	=	'$ZAP_COOKIES'" >> zap_config.ini
          cat zap_config.ini

      - name: Set up ZAP
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: ${{ secrets.URL }}
          fail_action: true
          cmd_options: -c zap_config.ini
          allow_issue_writing: false # This line prevents issue creation

      # - name: Upload ZAP Report (Optional)
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: zap-report
      #     path: ${{ github.workspace }}/zap_report.html
