@page
@using Dfe.Academies.External.Web.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Dfe.Academies.External.Web.Pages.Trust.FormAMat.ApplicationNewTrustImprovementStrategySummaryModel
@{
    ViewData["Title"] = "Apply to become an academy - Trust improvement strategy summary";
}

@section BeforeMain
{
	<a asp-page="ApplicationNewTrustSummary" asp-route-appId="@Model.ApplicationId" class="govuk-back-link">Back</a>
}

<div class="govuk-grid-column-full">
	<span class="govuk-caption-l">
		@Model.TrustName
	</span>
    <h1 class="govuk-heading-l">School improvement strategy</h1>

		@foreach (var question in Model.ViewModel)
    	{
    		<div class="govuk-grid-row">
    			<div class="govuk-grid-column-full">
    				@if (question.Status == SchoolConversionComponentStatus.NotStarted)
    				{
    					<a asp-page="@question.URI" class="govuk-button govuk-button--secondary"
    					   asp-route-appId="@Model.ApplicationId">
    						Start section
    					</a>
    				}
    				else if (Model.ApplicationStatus != ApplicationStatus.Submitted)
    				{
    					<a asp-page="@question.URI" class="govuk-link"
    					   asp-route-appId="@Model.ApplicationId">
    						Change your answers
    					</a>
    				}
    			</div>
    		</div>
    		<hr/>
    		@foreach (var conversionComponent in question.Sections)
    		{
    			<partial name="_SchoolConversionComponentPartial" model="@conversionComponent"/>
    		}
    	}

	<a asp-page="ApplicationNewTrustSummary" asp-route-appId="@Model.ApplicationId" class="govuk-button" data-module="govuk-button" data-cy="saveAndReturnButton">Save and return to your application</a>
</div>
